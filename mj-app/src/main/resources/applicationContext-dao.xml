<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- JDBC属性文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- DataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
        <property name="initialPoolSize" value="5" />
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="200" />
        <property name="idleConnectionTestPeriod" value="5" />
	</bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

     <tx:advice id="userTxAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method name="delete*" propagation="REQUIRED" read-only="false" 
                           rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>
                <tx:method name="insert*" propagation="REQUIRED" read-only="false" 
                           rollback-for="java.lang.RuntimeException" />
                <tx:method name="update*" propagation="REQUIRED" read-only="false" 
                           rollback-for="java.lang.Exception" />

                <tx:method name="find*" propagation="SUPPORTS" />
                <tx:method name="get*" propagation="SUPPORTS" />
                <tx:method name="select*" propagation="SUPPORTS" />
                <tx:method name="*" timeout="30"/>
            </tx:attributes>
     </tx:advice>

     <aop:config>
            <aop:pointcut id="pc" expression="execution(public * com.mjapp.dao.transactionmanager.*.*(..))" /> <!--把事务控制在Service层-->
            <aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />
     </aop:config>

    <tx:advice id="serviceTxAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false" timeout="30"
                       rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="spc" expression="execution(public * com.mjapp.service.*.*(..))" />
        <aop:advisor pointcut-ref="spc" advice-ref="serviceTxAdvice" />
    </aop:config>

    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mjapp"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
